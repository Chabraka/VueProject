{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCookie, setCookie } from '@/services/cookies/cookieUtils';\nimport { getGamesData } from '@/services/api/gamesAPI';\nimport GalleryOptions from './GalleryOptions.vue';\nimport GameCard from './GameCard.vue';\nexport default {\n  name: 'GamesGallery',\n  components: {\n    GameCard,\n    GalleryOptions\n  },\n  data() {\n    return {\n      gamesData: [],\n      //favorites : [],\n\n      search: localStorage.getItem(\"search\") || \"\",\n      gamesSortType: localStorage.getItem(\"gamesSortType\") || \"default\",\n      gamesFilterPlat: localStorage.getItem(\"gamesFilterPlat\") || \"All\",\n      gamesFilterGenre: localStorage.getItem(\"gamesFilterGenre\") || \"default\",\n      gridView: localStorage.getItem(\"gridView\") === \"true\"\n    };\n  },\n  created: function () {\n    this.retrieveGamesData();\n    const isLikedCookie = getCookie(`isLiked_${this.id}`);\n    if (isLikedCookie) {\n      this.isLiked = isLikedCookie === true;\n    }\n\n    /*const favoritesCookie = getCookie('favorites');\r\n    if (favoritesCookie) {\r\n        this.$emit('update:favorites', JSON.parse(favoritesCookie));\r\n    }*/\n  },\n\n  computed: {\n    searchingList() {\n      return this.gamesData.filter(gamesData => {\n        return gamesData.title.toLowerCase().includes(this.search.toLowerCase());\n      });\n    },\n    gamesOrganizedData: function () {\n      let sortedData = this.gamesData.slice();\n      const field = [\"AZName\", \"ZAName\"].includes(this.gamesSortType) ? \"title\" : [\"RecenttoOld\", \"OldtoRecent\"].includes(this.gamesSortType) ? \"release_date\" : [\"default\"].includes(this.gamesSortType);\n      const reversed = [\"ZAName\", \"OldtoRecent\"].includes(this.gamesSortType);\n      sortedData = this.searchingList.slice().sort((a, b) => {\n        if (field === \"title\") {\n          return a[field].localeCompare(b[field]);\n        } else if (field === \"release_date\") {\n          return Date.parse(a[field]) - Date.parse(b[field]);\n        }\n      });\n      if (reversed) sortedData = sortedData.reverse();\n      return sortedData;\n    },\n    gamesFilteredPlatData: function () {\n      let filteredData = this.gamesOrganizedData;\n      console.log(this.gamesFilterPlat);\n      if (this.gamesFilterPlat !== 'All') {\n        filteredData = filteredData.filter(item => item.platform === this.gamesFilterPlat);\n      }\n      return filteredData;\n    },\n    gamesFilteredGenreData: function () {\n      let filteredData = this.gamesFilteredPlatData;\n      if (this.gamesFilterGenre !== 'default') {\n        filteredData = filteredData.filter(game => game.genre === this.gamesFilterGenre);\n      }\n      return filteredData;\n    }\n  },\n  methods: {\n    async retrieveGamesData() {\n      this.gamesData = await getGamesData();\n    },\n    toggleLike(gameId) {\n      const game = this.gamesFilteredGenreData.find(game => game.id === gameId);\n      if (game) {\n        game.isLiked = !game.isLiked;\n        setCookie('isLiked', JSON.stringify(game.isLiked), 30);\n        console.log(document.cookie);\n        if (game.isLiked) {\n          this.favorites.push(game.id);\n        } else {\n          const index = this.favorites.indexOf(game.id);\n          if (index !== -1) {\n            this.favorites.splice(index, 1);\n          }\n        }\n        //return game.isLiked;\n        //setCookie('favorites', JSON.stringify(this.favorites), 30);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["getCookie","setCookie","getGamesData","GalleryOptions","GameCard","name","components","data","gamesData","search","localStorage","getItem","gamesSortType","gamesFilterPlat","gamesFilterGenre","gridView","created","retrieveGamesData","isLikedCookie","id","isLiked","computed","searchingList","filter","title","toLowerCase","includes","gamesOrganizedData","sortedData","slice","field","reversed","sort","a","b","localeCompare","Date","parse","reverse","gamesFilteredPlatData","filteredData","console","log","item","platform","gamesFilteredGenreData","game","genre","methods","toggleLike","gameId","find","JSON","stringify","document","cookie","favorites","push","index","indexOf","splice"],"sourceRoot":"","sources":["C:\\Users\\charl\\Documents\\IMAC\\2A\\S2\\PROG-WEB\\projet\\src\\components\\GamesGallery.vue"],"sourcesContent":["<template>\r\n\r\n    <GalleryOptions v-model:search=\"search\" \r\n    v-model:gamesSortType=\"gamesSortType\"\r\n    v-model:gamesFilterPlat=\"gamesFilterPlat\"\r\n    v-model:gamesFilterGenre=\"gamesFilterGenre\"\r\n    :gamesFilteredGenreData=\"gamesFilteredGenreData\"\r\n    v-model:gridView=\"gridView\"\r\n    />\r\n\r\n\r\n    <div class=\"games-gallery\">\r\n\r\n        <GameCard \r\n\r\n            v-for=\"game in gamesFilteredGenreData\" \r\n            :key=\"game.id\"\r\n            :id=\"game.id\"\r\n            :title=\"game.title\"\r\n            :thumbnail=\"game.thumbnail\"\r\n            :short_description=\"game.short_description\"  \r\n            :genre=\"game.genre\"\r\n            :platform=\"game.platform\"\r\n\r\n            :isLiked=\"game.isLiked\"\r\n\r\n            :gridView=\"gridView\"\r\n            \r\n        />\r\n    \r\n             \r\n    </div>\r\n\r\n\r\n    <div v-if=\"search && searchingList.length == []\">\r\n        <h2>Oups</h2>\r\n        <p>Aucun résultat trouvé</p>\r\n\r\n    </div>\r\n\r\n    <div v-if=\"!search && searchingList.length == []\">\r\n        <h2>Loading ...</h2>\r\n        <i class=\"fas fa-spinner fa-pulse fa-xl\"></i>\r\n\r\n    </div>\r\n  \r\n  \r\n  </template>\r\n  \r\n  <script>\r\n\r\n    import { getCookie, setCookie } from '@/services/cookies/cookieUtils';\r\n  \r\n    import { getGamesData } from '@/services/api/gamesAPI';\r\n\r\n    \r\n\r\n    import GalleryOptions from './GalleryOptions.vue'\r\n    import GameCard from './GameCard.vue';\r\n  \r\n    export default {\r\n    name : 'GamesGallery',\r\n  \r\n    components : {\r\n        GameCard,\r\n        GalleryOptions\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            gamesData : [],\r\n\r\n            //favorites : [],\r\n\r\n            search: localStorage.getItem(\"search\") || \"\",\r\n\t\t\tgamesSortType: localStorage.getItem(\"gamesSortType\") || \"default\",\r\n            gamesFilterPlat: localStorage.getItem(\"gamesFilterPlat\") || \"All\",\r\n            gamesFilterGenre: localStorage.getItem(\"gamesFilterGenre\") || \"default\",\r\n\r\n            gridView: localStorage.getItem(\"gridView\") === \"true\",\r\n\r\n        }\r\n    },\r\n\r\n    \r\n\r\n    created: function(){\r\n\r\n        this.retrieveGamesData();\r\n\r\n        const isLikedCookie = getCookie(`isLiked_${this.id}`);\r\n        if (isLikedCookie) {\r\n            this.isLiked = isLikedCookie === true;\r\n        }\r\n\r\n        /*const favoritesCookie = getCookie('favorites');\r\n        if (favoritesCookie) {\r\n            this.$emit('update:favorites', JSON.parse(favoritesCookie));\r\n        }*/\r\n\r\n    },\r\n\r\n    computed: {\r\n        searchingList(){\r\n            return this.gamesData.filter((gamesData) => {\r\n                return gamesData.title.toLowerCase().includes(this.search.toLowerCase());\r\n            })\r\n        },\r\n        \r\n        gamesOrganizedData: function() {\r\n            let sortedData = this.gamesData.slice()\r\n            const field = [\"AZName\", \"ZAName\"].includes(this.gamesSortType) ? \"title\" : [\"RecenttoOld\", \"OldtoRecent\"].includes(this.gamesSortType) ? \"release_date\" : [\"default\"].includes(this.gamesSortType);\r\n            const reversed = [\"ZAName\", \"OldtoRecent\"].includes(this.gamesSortType)\r\n            sortedData = this.searchingList.slice().sort((a, b) => {\r\n                if (field === \"title\") {\r\n                return a[field].localeCompare(b[field])\r\n                } else if (field === \"release_date\") {\r\n                return Date.parse(a[field]) - Date.parse(b[field])\r\n                }\r\n            })\r\n            if (reversed) sortedData = sortedData.reverse()\r\n            return sortedData\r\n\r\n        },\r\n\r\n        gamesFilteredPlatData: function() {        \r\n            let filteredData = this.gamesOrganizedData;\r\n            console.log(this.gamesFilterPlat)\r\n            if (this.gamesFilterPlat !== 'All') {\r\n                filteredData = filteredData.filter(item => item.platform === this.gamesFilterPlat);\r\n            }\r\n            return filteredData;\r\n        },\r\n\r\n        gamesFilteredGenreData: function() {\r\n        let filteredData = this.gamesFilteredPlatData;\r\n        if (this.gamesFilterGenre !== 'default') {\r\n            filteredData = filteredData.filter(game => game.genre === this.gamesFilterGenre);\r\n        }\r\n        return filteredData;\r\n        }\r\n    },\r\n\r\n  \r\n    methods: {\r\n      \r\n        async retrieveGamesData(){\r\n            this.gamesData = await getGamesData()\r\n        },\r\n\r\n        toggleLike(gameId) {\r\n            const game = this.gamesFilteredGenreData.find(game => game.id === gameId);\r\n            if (game) {\r\n                game.isLiked = !game.isLiked;\r\n                setCookie('isLiked', JSON.stringify(game.isLiked), 30);\r\n                console.log(document.cookie);\r\n                if (game.isLiked) {\r\n                    this.favorites.push(game.id);\r\n                } else {\r\n                    const index = this.favorites.indexOf(game.id);\r\n                    if (index !== -1) {\r\n                        this.favorites.splice(index, 1);\r\n                    }\r\n                }\r\n                //return game.isLiked;\r\n                //setCookie('favorites', JSON.stringify(this.favorites), 30);\r\n            }\r\n        },\r\n        \r\n    },\r\n  }\r\n \r\n  </script>\r\n  \r\n  <style scoped>\r\n   .games-gallery{\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n    }\r\n    \r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}