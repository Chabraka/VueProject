{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a8215fe\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"games-gallery\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Oups\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Aucun résultat trouvé\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Loading ...\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-spinner fa-pulse fa-xl\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nexport function render(_ctx, _cache) {\n  const _component_GalleryOptions = _resolveComponent(\"GalleryOptions\");\n  const _component_GameCard = _resolveComponent(\"GameCard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"<div class=\\\"gallery-options\\\">\\r\\n\\r\\n        <div class=\\\"search-bar\\\">\\r\\n            <i class=\\\"fa-solid fa-magnifying-glass\\\"></i>\\r\\n            <input type=\\\"text\\\" v-model=\\\"search\\\" placeholder=\\\"Rechercher un jeu...\\\">\\r\\n            <span v-if=\\\"search\\\" @click=\\\"cleanSearch\\\">X</span>\\r\\n            <i v-if=\\\"search && gamesFilteredGenreData.length >= 1 \\\">\\r\\n            {{gamesFilteredGenreData.length}} résultat<i v-if=\\\"gamesFilteredGenreData.length >= 2\\\">s</i>\\r\\n            </i>\\r\\n        </div>\\r\\n\\r\\n        <ul class=\\\"display\\\">\\r\\n            \\r\\n           <li>\\r\\n                <i @click=\\\"gridViews = true\\\" class=\\\"fa-solid fa-grip fa-xl\\\"></i>\\r\\n            </li>\\r\\n            <li>\\r\\n                <i @click=\\\"gridViews = false\\\" class=\\\"fa-solid fa-list fa-xl\\\"></i>\\r\\n            </li>\\r\\n            <li>\\r\\n                <i @click=\\\"Favorites = true\\\" class=\\\"fa-solid fa-heart fa-lg\\\"></i>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"drop-btn\\\">\\r\\n                <i @click=\\\"Filters = true\\\" class=\\\"fa-solid fa-filter fa-lg\\\"></i>\\r\\n\\r\\n                <div class=\\\"drop-content\\\">\\r\\n                    <label for=\\\"game-sort\\\">Trier par : </label>\\r\\n                    <select v-model=\\\"gamesSortType\\\" id=\\\"game-sort\\\">\\r\\n                        <option value=\\\"default\\\"> Par défaut</option>\\r\\n                        <option value=\\\"AZName\\\"> Noms de A à Z</option>\\r\\n                        <option value=\\\"ZAName\\\"> Noms de Z à A</option>\\r\\n                        <option value=\\\"RecenttoOld\\\"> Du plus récent au plus vieux</option>\\r\\n                        <option value=\\\"OldtoRecent\\\"> Du plus vieux au plus récent</option>\\r\\n                    </select>\\r\\n\\r\\n                    <label for=\\\"game-filter-plat\\\">Sélectionner par plateforme  : </label>\\r\\n                    <select v-model=\\\"gamesFilterPlat\\\" id=\\\"game-filter-plat\\\">\\r\\n                        <option value=\\\"All\\\"> All</option>\\r\\n                        <option value=\\\"PC (Windows)\\\">PC (Windows)</option>\\r\\n                        <option value=\\\"Web Browser\\\"> Web Browser</option>\\r\\n                    </select>\\r\\n\\r\\n                    <label for=\\\"game-filter-genre\\\">Sélectionner par genre: </label>\\r\\n                    <select v-model=\\\"gamesFilterGenre\\\" id=\\\"game-filter-genre\\\">\\r\\n                        <option value=\\\"default\\\"> Par défaut</option>\\r\\n                        <option v-for=\\\"cat in catData\\\" :key=\\\"cat\\\" :value=\\\"cat\\\">{{cat}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                \\r\\n            </li>\\r\\n        </ul>    \\r\\n       \\r\\n    </div>\"), _createVNode(_component_GalleryOptions, {\n    search: _ctx.search,\n    \"onUpdate:search\": _cache[0] || (_cache[0] = $event => _ctx.search = $event),\n    gamesSortType: _ctx.gamesSortType,\n    \"onUpdate:gamesSortType\": _cache[1] || (_cache[1] = $event => _ctx.gamesSortType = $event),\n    gamesFilterPlat: _ctx.gamesFilterPlat,\n    \"onUpdate:gamesFilterPlat\": _cache[2] || (_cache[2] = $event => _ctx.gamesFilterPlat = $event),\n    gamesFilterGenre: _ctx.gamesFilterGenre,\n    \"onUpdate:gamesFilterGenre\": _cache[3] || (_cache[3] = $event => _ctx.gamesFilterGenre = $event)\n  }, null, 8 /* PROPS */, [\"search\", \"gamesSortType\", \"gamesFilterPlat\", \"gamesFilterGenre\"]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.gamesFilteredGenreData, game => {\n    return _openBlock(), _createBlock(_component_GameCard, {\n      key: game.id,\n      title: game.title,\n      thumbnail: game.thumbnail,\n      short_description: game.short_description,\n      genre: game.genre,\n      platform: game.platform\n    }, null, 8 /* PROPS */, [\"title\", \"thumbnail\", \"short_description\", \"genre\", \"platform\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _ctx.search && _ctx.searchingList.length == [] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_5)) : _createCommentVNode(\"v-if\", true), !_ctx.search && _ctx.searchingList.length == [] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_9)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EA+DSA,KAAK,EAAC;AAAe;;;;gEAkBtBC,oBAAa,YAAT,MAAI;gEACRA,oBAA4B,WAAzB,uBAAqB;oBADxBC,UAAa,EACbC,UAA4B;;;;gEAK5BF,oBAAoB,YAAhB,aAAW;gEACfA,oBAA6C;EAA1CD,KAAK,EAAC;AAA+B;oBADxCI,UAAoB,EACpBC,UAA6C;;;;6DAtFjDC,gpFAqDS,EAETC,aAGEC;IAHsBC,MAAM,EAAEC,WAAM;2DAANA,WAAM;IAAUC,aAAa,EAAED,kBAAa;kEAAbA,kBAAa;IACpEE,eAAe,EAAEF,oBAAe;oEAAfA,oBAAe;IAChCG,gBAAgB,EAAEH,qBAAgB;qEAAhBA,qBAAgB;+FAI1CT,oBAeM,OAfNa,UAeM,sBAbFC,oBAUEC,6BARiBN,2BAAsB,EAA9BO,IAAI;yBAFfC,aAUEC;MAPGC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZC,KAAK,EAAEL,IAAI,CAACK,KAAK;MACjBC,SAAS,EAAEN,IAAI,CAACM,SAAS;MACzBC,iBAAiB,EAAEP,IAAI,CAACO,iBAAiB;MACzCC,KAAK,EAAER,IAAI,CAACQ,KAAK;MACjBC,QAAQ,EAAET,IAAI,CAACS;;oCAObhB,WAAM,IAAIA,kBAAa,CAACiB,MAAM,wBAAzCZ,oBAIM,sEAEML,WAAM,IAAIA,kBAAa,CAACiB,MAAM,wBAA1CZ,oBAIM","names":["class","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_7","_hoisted_8","_createCommentVNode","_createVNode","_component_GalleryOptions","search","_ctx","gamesSortType","gamesFilterPlat","gamesFilterGenre","_hoisted_1","_createElementBlock","_Fragment","game","_createBlock","_component_GameCard","key","id","title","thumbnail","short_description","genre","platform","length"],"sourceRoot":"","sources":["C:\\Users\\charl\\Documents\\IMAC\\2A\\S2\\PROG-WEB\\projet\\src\\components\\GamesGallery.vue"],"sourcesContent":["<template>\r\n\r\n    <!--<div class=\"gallery-options\">\r\n\r\n        <div class=\"search-bar\">\r\n            <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n            <input type=\"text\" v-model=\"search\" placeholder=\"Rechercher un jeu...\">\r\n            <span v-if=\"search\" @click=\"cleanSearch\">X</span>\r\n            <i v-if=\"search && gamesFilteredGenreData.length >= 1 \">\r\n            {{gamesFilteredGenreData.length}} résultat<i v-if=\"gamesFilteredGenreData.length >= 2\">s</i>\r\n            </i>\r\n        </div>\r\n\r\n        <ul class=\"display\">\r\n            \r\n           <li>\r\n                <i @click=\"gridViews = true\" class=\"fa-solid fa-grip fa-xl\"></i>\r\n            </li>\r\n            <li>\r\n                <i @click=\"gridViews = false\" class=\"fa-solid fa-list fa-xl\"></i>\r\n            </li>\r\n            <li>\r\n                <i @click=\"Favorites = true\" class=\"fa-solid fa-heart fa-lg\"></i>\r\n            </li>\r\n\r\n            <li class=\"drop-btn\">\r\n                <i @click=\"Filters = true\" class=\"fa-solid fa-filter fa-lg\"></i>\r\n\r\n                <div class=\"drop-content\">\r\n                    <label for=\"game-sort\">Trier par : </label>\r\n                    <select v-model=\"gamesSortType\" id=\"game-sort\">\r\n                        <option value=\"default\"> Par défaut</option>\r\n                        <option value=\"AZName\"> Noms de A à Z</option>\r\n                        <option value=\"ZAName\"> Noms de Z à A</option>\r\n                        <option value=\"RecenttoOld\"> Du plus récent au plus vieux</option>\r\n                        <option value=\"OldtoRecent\"> Du plus vieux au plus récent</option>\r\n                    </select>\r\n\r\n                    <label for=\"game-filter-plat\">Sélectionner par plateforme  : </label>\r\n                    <select v-model=\"gamesFilterPlat\" id=\"game-filter-plat\">\r\n                        <option value=\"All\"> All</option>\r\n                        <option value=\"PC (Windows)\">PC (Windows)</option>\r\n                        <option value=\"Web Browser\"> Web Browser</option>\r\n                    </select>\r\n\r\n                    <label for=\"game-filter-genre\">Sélectionner par genre: </label>\r\n                    <select v-model=\"gamesFilterGenre\" id=\"game-filter-genre\">\r\n                        <option value=\"default\"> Par défaut</option>\r\n                        <option v-for=\"cat in catData\" :key=\"cat\" :value=\"cat\">{{cat}}</option>\r\n                    </select>\r\n                </div>\r\n                \r\n            </li>\r\n        </ul>    \r\n       \r\n    </div>-->\r\n\r\n    <GalleryOptions v-model:search=\"search\" v-model:gamesSortType=\"gamesSortType\"\r\n    v-model:gamesFilterPlat=\"gamesFilterPlat\"\r\n    v-model:gamesFilterGenre=\"gamesFilterGenre\"\r\n    />\r\n\r\n\r\n    <div class=\"games-gallery\">\r\n\r\n        <GameCard \r\n\r\n            v-for=\"game in gamesFilteredGenreData\" \r\n            :key=\"game.id\"\r\n            :title=\"game.title\"\r\n            :thumbnail=\"game.thumbnail\"\r\n            :short_description=\"game.short_description\"  \r\n            :genre=\"game.genre\"\r\n            :platform=\"game.platform\" \r\n\r\n        />\r\n    \r\n             \r\n    </div>\r\n\r\n    <div v-if=\"search && searchingList.length == []\">\r\n        <h2>Oups</h2>\r\n        <p>Aucun résultat trouvé</p>\r\n\r\n    </div>\r\n\r\n    <div v-if=\"!search && searchingList.length == []\">\r\n        <h2>Loading ...</h2>\r\n        <i class=\"fas fa-spinner fa-pulse fa-xl\"></i>\r\n\r\n    </div>\r\n  \r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  \r\n    import { getGamesData } from '@/services/api/gamesAPI';\r\n    //import { getCatData} from '@/services/api/gamesCat';\r\n\r\n    import GalleryOptions from './GalleryOptions.vue'\r\n  \r\n    import GameCard from './GameCard.vue';\r\n  \r\n    export default {\r\n    name : 'GamesGallery',\r\n  \r\n    components : {\r\n        GameCard,\r\n        GalleryOptions\r\n    },\r\n\r\n    /*watch: {\r\n        gridViews: function(newGridViews) {\r\n            localStorage.setItem(\"gridViews\", newGridViews)\r\n        },\r\n        search: function(newSearch) {\r\n            localStorage.setItem(\"search\", newSearch)\r\n        },\r\n        gamesSortType: function(newGamesSortType){\r\n            localStorage.setItem(\"gamesSortType\", newGamesSortType)\r\n        },\r\n        gamesFilterPlat: function(newGamesFilterPlat){\r\n            localStorage.setItem(\"gamesFilterPlat\", newGamesFilterPlat)\r\n        },\r\n        gamesFilterGenre: function(newGamesFilterGenre){\r\n            localStorage.setItem(\"gamesFilterGenre\", newGamesFilterGenre)\r\n        }\r\n    },*/\r\n\r\n  \r\n    data() {\r\n        return {\r\n            gamesData : [],\r\n            //catData:[],\r\n\r\n            //search:'',\r\n            gridViews:true,\r\n            /*gamesSortType: \"default\",\r\n            gamesFilterPlat :\"All\",\r\n            gamesFilterGenre :\"default\",*/\r\n        \r\n            search: localStorage.getItem(\"search\") || \"\",\r\n\t\t\tgamesSortType: localStorage.getItem(\"gamesSortType\") || \"default\",\r\n            gamesFilterPlat: localStorage.getItem(\"gamesFilterPlat\") || \"All\",\r\n            gamesFilterGenre: localStorage.getItem(\"gamesFilterGenre\") || \"default\",\r\n\r\n    \r\n        }\r\n    },\r\n\r\n    computed: {\r\n        searchingList(){\r\n            return this.gamesData.filter((gamesData) => {\r\n                return gamesData.title.toLowerCase().includes(this.search.toLowerCase());\r\n            })\r\n        },\r\n\r\n        console.log(searchingList);\r\n        \r\n        gamesOrganizedData: function() {\r\n            let sortedData = this.gamesData.slice()\r\n            const field = [\"AZName\", \"ZAName\"].includes(this.gamesSortType) ? \"title\" : [\"RecenttoOld\", \"OldtoRecent\"].includes(this.gamesSortType) ? \"release_date\" : [\"default\"].includes(this.gamesSortType);\r\n            const reversed = [\"ZAName\", \"OldtoRecent\"].includes(this.gamesSortType)\r\n            sortedData = this.searchingList.slice().sort((a, b) => {\r\n                if (field === \"title\") {\r\n                return a[field].localeCompare(b[field])\r\n                } else if (field === \"release_date\") {\r\n                return Date.parse(a[field]) - Date.parse(b[field])\r\n                }\r\n            })\r\n            if (reversed) sortedData = sortedData.reverse()\r\n            return sortedData\r\n\r\n        },\r\n\r\n        gamesFilteredPlatData: function() {        \r\n            let filteredData = this.gamesOrganizedData;\r\n            console.log(this.gamesFilterPlat)\r\n            if (this.gamesFilterPlat !== 'All') {\r\n                filteredData = filteredData.filter(item => item.platform === this.gamesFilterPlat);\r\n            }\r\n            return filteredData;\r\n        },\r\n\r\n        gamesFilteredGenreData: function() {\r\n        let filteredData = this.gamesFilteredPlatData;\r\n        if (this.gamesFilterGenre !== 'default') {\r\n            filteredData = filteredData.filter(game => game.genre === this.gamesFilterGenre);\r\n        }\r\n        return filteredData;\r\n        }\r\n    },\r\n\r\n\r\n    created: function(){\r\n        this.retrieveGamesData()\r\n        //this. retrieveCatData()\r\n    },\r\n  \r\n    methods: {\r\n      \r\n        async retrieveGamesData(){\r\n            this.gamesData = await getGamesData()\r\n            //console.log(this.gamesData)\r\n        },\r\n\r\n        /*async retrieveCatData(){\r\n            this.catData = await getCatData()\r\n            //console.log(this.catData)\r\n        },*/\r\n        \r\n        /*cleanSearch:function(){\r\n            this.search = '' \r\n\t\t},*/\r\n    },\r\n  \r\n  }\r\n \r\n\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n   \r\n\r\n   .games-gallery{\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}