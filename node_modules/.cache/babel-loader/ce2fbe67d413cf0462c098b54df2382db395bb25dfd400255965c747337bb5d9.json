{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fcf557f6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"games-gallery\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Oups\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Vous n'avez pas de favoris\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GameCard = _resolveComponent(\"GameCard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showFavorites && $options.showFavorites(...args))\n  }, \"Afficher les favoris\"), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.favorites, game => {\n    return _openBlock(), _createBlock(_component_GameCard, {\n      key: game.id,\n      id: game.id,\n      title: game.title,\n      thumbnail: game.thumbnail,\n      short_description: game.short_description,\n      genre: game.genre,\n      platform: game.platform,\n      gridView: $data.gridView\n    }, null, 8 /* PROPS */, [\"id\", \"title\", \"thumbnail\", \"short_description\", \"genre\", \"platform\", \"gridView\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.search && _ctx.favorites.length == [] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_5)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAMOA,KAAK,EAAC;AAAe;;;;gEAqBtBC,oBAAa,YAAT,MAAI;gEACRA,oBAAiC,WAA9B,4BAA0B;oBAD7BC,UAAa,EACbC,UAAiC;;;6DAxBrCF,oBAA4D;IAAnDG,OAAK,yCAAEC,yDAAa;KAAE,sBAAoB,GAEnDJ,oBAkBM,OAlBNK,UAkBM,sBAhBFC,oBAaEC,6BAXiBC,cAAS,EAAjBC,IAAI;yBAFfC,aAaEC;MAVGC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZA,EAAE,EAAEJ,IAAI,CAACI,EAAE;MACXC,KAAK,EAAEL,IAAI,CAACK,KAAK;MACjBC,SAAS,EAAEN,IAAI,CAACM,SAAS;MACzBC,iBAAiB,EAAEP,IAAI,CAACO,iBAAiB;MACzCC,KAAK,EAAER,IAAI,CAACQ,KAAK;MACjBC,QAAQ,EAAET,IAAI,CAACS,QAAQ;MAEvBC,QAAQ,EAAEC;;oCAORA,YAAM,IAAIZ,cAAS,CAACa,MAAM,wBAArCf,oBAIM","names":["class","_createElementVNode","_hoisted_3","_hoisted_4","onClick","$options","_hoisted_1","_createElementBlock","_Fragment","_ctx","game","_createBlock","_component_GameCard","key","id","title","thumbnail","short_description","genre","platform","gridView","$data","length"],"sourceRoot":"","sources":["C:\\Users\\charl\\Documents\\IMAC\\2A\\S2\\PROG-WEB\\projet\\src\\components\\FavoriteGames.vue"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n  <button @click=\"showFavorites\">Afficher les favoris</button>\r\n\r\n  <div class=\"games-gallery\">\r\n\r\n      <GameCard \r\n\r\n          v-for=\"game in favorites\" \r\n          :key=\"game.id\"\r\n          :id=\"game.id\"\r\n          :title=\"game.title\"\r\n          :thumbnail=\"game.thumbnail\"\r\n          :short_description=\"game.short_description\"  \r\n          :genre=\"game.genre\"\r\n          :platform=\"game.platform\"\r\n\r\n          :gridView=\"gridView\"\r\n          \r\n      />\r\n  \r\n           \r\n  </div>\r\n\r\n  <div v-if=\"search && favorites.length == []\">\r\n      <h2>Oups</h2>\r\n      <p>Vous n'avez pas de favoris</p>\r\n\r\n  </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n  import { getGamesData } from '@/services/api/gamesAPI';\r\n\r\n  \r\n\r\n  import GalleryOptions from './GalleryOptions.vue'\r\n  import GameCard from './GameCard.vue';\r\n\r\n  export default {\r\n  name : 'GamesGallery',\r\n\r\n  components : {\r\n      GameCard,\r\n      GalleryOptions\r\n  },\r\n\r\n  data() {\r\n      return {\r\n          gamesData : [],\r\n\r\n          search: localStorage.getItem(\"search\") || \"\",\r\n          gamesSortType: localStorage.getItem(\"gamesSortType\") || \"default\",\r\n          gamesFilterPlat: localStorage.getItem(\"gamesFilterPlat\") || \"All\",\r\n          gamesFilterGenre: localStorage.getItem(\"gamesFilterGenre\") || \"default\",\r\n\r\n          gridView: localStorage.getItem(\"gridView\") === \"true\",\r\n\r\n      }\r\n  },\r\n\r\n  computed: {\r\n      searchingList(){\r\n          return this.gamesData.filter((gamesData) => {\r\n              return gamesData.title.toLowerCase().includes(this.search.toLowerCase());\r\n          })\r\n      },\r\n      \r\n      gamesOrganizedData: function() {\r\n          let sortedData = this.gamesData.slice()\r\n          const field = [\"AZName\", \"ZAName\"].includes(this.gamesSortType) ? \"title\" : [\"RecenttoOld\", \"OldtoRecent\"].includes(this.gamesSortType) ? \"release_date\" : [\"default\"].includes(this.gamesSortType);\r\n          const reversed = [\"ZAName\", \"OldtoRecent\"].includes(this.gamesSortType)\r\n          sortedData = this.searchingList.slice().sort((a, b) => {\r\n              if (field === \"title\") {\r\n              return a[field].localeCompare(b[field])\r\n              } else if (field === \"release_date\") {\r\n              return Date.parse(a[field]) - Date.parse(b[field])\r\n              }\r\n          })\r\n          if (reversed) sortedData = sortedData.reverse()\r\n          return sortedData\r\n\r\n      },\r\n\r\n      gamesFilteredPlatData: function() {        \r\n          let filteredData = this.gamesOrganizedData;\r\n          console.log(this.gamesFilterPlat)\r\n          if (this.gamesFilterPlat !== 'All') {\r\n              filteredData = filteredData.filter(item => item.platform === this.gamesFilterPlat);\r\n          }\r\n          return filteredData;\r\n      },\r\n\r\n      gamesFilteredGenreData: function() {\r\n      let filteredData = this.gamesFilteredPlatData;\r\n      if (this.gamesFilterGenre !== 'default') {\r\n          filteredData = filteredData.filter(game => game.genre === this.gamesFilterGenre);\r\n      }\r\n      return filteredData;\r\n      }\r\n  },\r\n\r\n\r\n  created: function(){\r\n      this.retrieveGamesData()\r\n  },\r\n\r\n  methods: {\r\n    \r\n      async retrieveGamesData(){\r\n          this.gamesData = await getGamesData()\r\n      },\r\n\r\n      showFavorites() {\r\n      console.log(this.favorites); // Affiche les jeux favoris dans la console\r\n      // Vous pouvez également mettre à jour une propriété `showFavorites` ou utiliser un autre mécanisme pour afficher les jeux favoris dans votre template\r\n      },\r\n  },\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n .games-gallery{\r\n      display: flex;\r\n      justify-content: center;\r\n      flex-wrap: wrap;\r\n  }\r\n  \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}