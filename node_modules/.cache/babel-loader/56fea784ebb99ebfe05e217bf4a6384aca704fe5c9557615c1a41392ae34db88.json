{"ast":null,"code":"import { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-51ed5d59\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"character-card\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"p\", null, \" invisible paragraph \", 512 /* NEED_PATCH */), [[_vShow, _ctx.isVisible == true]])]);\n}","map":{"version":3,"mappings":";;;EAESA,KAAK,EAAC;AAAgB;;uBAA3BC,oBAMM,OANNC,UAMM,mBALFC,oBAAuD,WAAzB,uBAAqB,mCAAxCC,cAAS","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_ctx"],"sourceRoot":"","sources":["C:\\Users\\charl\\Documents\\IMAC\\2A\\S2\\PROG-WEB\\projet\\src\\components\\CharacterCard.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"character-card\">\r\n        <p v-show=\"isVisible == true\"> invisible paragraph </p>\r\n        \r\n       \r\n\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport getCharactersData from '@/services/api/charactersAPI.js'\r\n\r\n    export default {\r\n        name : 'CharacterCard',\r\n\r\n        data() {\r\n            return {\r\n                charactersData: []\r\n                isVisible: false\r\n            }\r\n        },\r\n\r\n        /*props : {\r\n            name : String,\r\n            species : String,\r\n            gender : String,\r\n            house : String,\r\n            dateOfBirth : String,\r\n            wizard : String,\r\n            ancestry : String,\r\n            patronus: String,\r\n            image : String\r\n\r\n        },*/\r\n\r\n        methods: {\r\n            async retrieveCharactersData() {\r\n                this.charactersData = await getCharactersData()\r\n                console.log(this.charactersData)\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .character-card{\r\n        display: flex;\r\n    }\r\n\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}